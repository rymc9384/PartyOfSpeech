party = 'R', topic = 0, totalcol = 'words',
outcolnames = c('word', 'counts1', 'priors1'))
## 2.1) Democratic pronouns plus:
prpD <- make_counts(x = df, count_cols = c('prpplus'),
party = 'D', topic = 0, totalcol = 'words',
outcolnames = c('word', 'counts2', 'priors2'))
## 2.2) Merge partisan counts:
prpAll <- merge(x = do.call(rbind, prpR$counts),
y = do.call(rbind, prpD$counts),
by="word", all = T)
## 2.3) Fill NAs to avoid numerical errors:
prpAll[is.na(prpAll[,2]),2] <- 0
prpAll[is.na(prpAll[,3]),3] <- 0.01
prpAll[is.na(prpAll[,4]),4] <- 0
prpAll[is.na(prpAll[,5]),5] <- 0.01
##############################
### 3) FIT MODEL
##############################
## 3.0) Fightin' Words model:
fw_prpplus <- fightin(n1 = prpR$nwords, n2 = prpD$nwords,
counts1 = prpAll$counts1, counts2 = prpAll$counts2,
priors1 = prpAll$priors1, priors2 = prpAll$priors2)
## 3.1) Index words:
fw_prpplus$word <- prpAll$word
rm(list = ls())
library(stringr)
options(stringsAsFactors = F)
sessionInfo()
##############################
### 0) UTILITIES
##############################
# Call util functions into Global Env:
source("D:/Dropbox/Dissertation/02-pos_senate/01-code/PartyOfSpeech/06-robustness/utils_fw.R")
# Edited "Fightin' Words" plot:
fightin_plot <- function(words, zeta, freq, groups=c("GOP","DEM"), cols=c("red2","steelblue"), nwords=15, zcut=3.29){
# plot limits
xlims <- c(-1, max(log(freq)) + 3)
ylims <- round(max(abs(zeta)) + 5, -1)
ylims <- c(-ylims, ylims)
# xaxis labels
xat <- c(-1, log(1), log(100), log(1000), log(10000), log(100000))
xtics <- c("", 1, 100, 1000, 10000, 100000)
xlab <- "Word Frequency in Topic"
# ylab labels
yrng <- ylims[2] - ylims[1]
if (yrng > 50){
yat <- seq(ylims[1], ylims[2], by=10)
} else{
yat <- seq(ylims[1], ylims[2], by = 5)
}
ylab <- expression(zeta[kw]^(R-D)/4.42)
# points to label
tolab1 <- which(zeta %in% tail(sort(zeta), nwords) & zeta >= zcut)
tolab2 <- which(zeta %in% head(sort(zeta), nwords) & zeta <= -zcut)
# words to appear on right
wlist1 <- which(zeta %in% tail(sort(zeta), nwords))
wlist1 <- wlist1[order(zeta[wlist1])]
wlist2 <- which(zeta %in% head(sort(zeta), nwords))
wlist2 <- wlist2[order(zeta[wlist2])]
par(mar = c(5,7,2,2))
plot(0,0, type="n", xlim = xlims, ylim = ylims, xlab = xlab, ylab = ylab, cex.lab = 2, axes = F)
axis(side = 1, at = xat, labels = xtics, cex.axis = 1.5)
axis(side = 2, at = yat, cex.axis = 1.5)
points(log(freq[abs(zeta) < zcut]), zeta[abs(zeta) < zcut], pch=21, bg="grey70", col="grey70", cex=abs(zeta[abs(zeta) < zcut]) / 3)
points(log(freq[zeta >= zcut]), zeta[zeta >= zcut], pch=21, bg=cols[1], col=cols[1], cex=zeta[zeta >= zcut] / 3)
points(log(freq[zeta <= -zcut]), zeta[zeta <= -zcut], pch=21, bg=cols[2], col=cols[2], cex=abs(zeta[zeta <= -zcut]) / 3)
text(x = log(freq[tolab1]), y = zeta[tolab1], labels = words[tolab1], cex=zeta[tolab1] / 4, col=cols[1], pos=4)
text(x = log(freq[tolab2]), y = zeta[tolab2], labels = words[tolab2], cex=zeta[tolab2] / 4, col=cols[2], pos=4)
# Group labels on right
text(x = xlims[2], y = ylims[2], labels = groups[1], col = cols[1], cex = 3, pos = 2)
text(x = xlims[2], y = ylims[1], labels = groups[2], col = cols[2], cex = 3, pos = 2)
# Group word lists
text(x = xlims[2], y = seq(0.5, ylims[2] - 1.5, length.out = nwords), labels = words[wlist1], cex = zeta[wlist1] / 4, col = cols[1], pos = 2)
text(x = xlims[2], y = seq(ylims[1] + 1.5, -0.5, length.out = nwords), labels = words[wlist2], cex = abs(zeta[wlist2]) / 4, col = cols[2], pos = 2)
}
# Regex expressions:
PRPplus.re <- "[a-z]+_PRP[$]? [a-z]+_[A-Z]+"
##############################
### 1) LOAD & PREP DATA
##############################
## 1.0) Read in text:
df <- read.csv("D:/cong_text/final_pos/topic_lemtag_merged_114.csv")
## 1.1) Remove newlines:
df$lemma_text <- gsub(pattern = "[\n]", replacement = '', df$lemma_text)
## 1.2) Count pronouns and following token:
df$prp <- str_extract_all(string = df$lemma_text, pattern = PRPplus.re)
## 1.3) Count all tokens:
df$words <- NA
for (i in 1:nrow(df)){
df$words[i] <- count_tokens(df$lemma_text[i])
}
##############################
### 2) SUBSET COUNTS
##############################
## 2.0) Republican pronouns plus:
prpR <- make_counts(x = df, count_cols = c('prpplus'),
party = 'R', topic = 0, totalcol = 'words',
outcolnames = c('word', 'counts1', 'priors1'))
## 2.1) Democratic pronouns plus:
prpD <- make_counts(x = df, count_cols = c('prpplus'),
party = 'D', topic = 0, totalcol = 'words',
outcolnames = c('word', 'counts2', 'priors2'))
## 2.2) Merge partisan counts:
prpAll <- merge(x = do.call(rbind, prpR$counts),
y = do.call(rbind, prpD$counts),
by="word", all = T)
## 2.3) Fill NAs to avoid numerical errors:
prpAll[is.na(prpAll[,2]),2] <- 0
prpAll[is.na(prpAll[,3]),3] <- 0.01
prpAll[is.na(prpAll[,4]),4] <- 0
prpAll[is.na(prpAll[,5]),5] <- 0.01
##############################
### 3) FIT MODEL
##############################
## 3.0) Fightin' Words model:
fw_prpplus <- fightin(n1 = prpR$nwords, n2 = prpD$nwords,
counts1 = prpAll$counts1, counts2 = prpAll$counts2,
priors1 = prpAll$priors1, priors2 = prpAll$priors2)
## 3.1) Index words:
fw_prpplus$word <- prpAll$word
## 3.2) Print most partisan words:
cat("\n\n\tDEMS:\n")
head(fw_prpplus[order(fw_prpplus$zeta),], 20)
cat("\n\tREPS:\n")
tail(fw_prpplus[order(fw_prpplus$zeta),], 20)
df$prpplus <- df$prp
## 2.0) Republican pronouns plus:
prpR <- make_counts(x = df, count_cols = c('prpplus'),
party = 'R', topic = 0, totalcol = 'words',
outcolnames = c('word', 'counts1', 'priors1'))
## 2.1) Democratic pronouns plus:
prpD <- make_counts(x = df, count_cols = c('prpplus'),
party = 'D', topic = 0, totalcol = 'words',
outcolnames = c('word', 'counts2', 'priors2'))
## 2.2) Merge partisan counts:
prpAll <- merge(x = do.call(rbind, prpR$counts),
y = do.call(rbind, prpD$counts),
by="word", all = T)
## 2.3) Fill NAs to avoid numerical errors:
prpAll[is.na(prpAll[,2]),2] <- 0
prpAll[is.na(prpAll[,3]),3] <- 0.01
prpAll[is.na(prpAll[,4]),4] <- 0
prpAll[is.na(prpAll[,5]),5] <- 0.01
## 3.0) Fightin' Words model:
fw_prpplus <- fightin(n1 = prpR$nwords, n2 = prpD$nwords,
counts1 = prpAll$counts1, counts2 = prpAll$counts2,
priors1 = prpAll$priors1, priors2 = prpAll$priors2)
## 3.1) Index words:
fw_prpplus$word <- prpAll$word
## 3.2) Print most partisan words:
cat("\n\n\tDEMS:\n")
head(fw_prpplus[order(fw_prpplus$zeta),], 20)
cat("\n\tREPS:\n")
tail(fw_prpplus[order(fw_prpplus$zeta),], 20)
fightin_plot(words = fw_prpplus$word, zeta = fw_prpplus$zeta/4.42, freq = fw_prpplus$freq, nwords = 15, zcut = 1)
rm(list = ls())
library(stringr)
options(stringsAsFactors = F)
sessionInfo()
##############################
### 0) UTILITIES
##############################
# Call util functions into Global Env:
source("D:/Dropbox/Dissertation/02-pos_senate/01-code/PartyOfSpeech/06-robustness/utils_fw.R")
# Edited "Fightin' Words" plot:
fightin_plot <- function(words, zeta, freq, groups=c("GOP","DEM"), cols=c("red2","steelblue"), nwords=15, zcut=3.29){
# plot limits
xlims <- c(-1, max(log(freq)) + 3)
ylims <- round(max(abs(zeta)) + 5, -1)
ylims <- c(-ylims, ylims)
# xaxis labels
xat <- c(-1, log(1), log(100), log(1000), log(10000), log(100000))
xtics <- c("", 1, 100, 1000, 10000, 100000)
xlab <- "Word Frequency in Topic"
# ylab labels
yrng <- ylims[2] - ylims[1]
if (yrng > 50){
yat <- seq(ylims[1], ylims[2], by=10)
} else{
yat <- seq(ylims[1], ylims[2], by = 5)
}
ylab <- expression(zeta[kw]^(R-D)/4.42)
# points to label
tolab1 <- which(zeta %in% tail(sort(zeta), nwords) & zeta >= zcut)
tolab2 <- which(zeta %in% head(sort(zeta), nwords) & zeta <= -zcut)
# words to appear on right
wlist1 <- which(zeta %in% tail(sort(zeta), nwords))
wlist1 <- wlist1[order(zeta[wlist1])]
wlist2 <- which(zeta %in% head(sort(zeta), nwords))
wlist2 <- wlist2[order(zeta[wlist2])]
par(mar = c(5,7,2,2))
plot(0,0, type="n", xlim = xlims, ylim = ylims, xlab = xlab, ylab = ylab, cex.lab = 2, axes = F)
axis(side = 1, at = xat, labels = xtics, cex.axis = 1.5)
axis(side = 2, at = yat, cex.axis = 1.5)
points(log(freq[abs(zeta) < zcut]), zeta[abs(zeta) < zcut], pch=21, bg="grey70", col="grey70", cex=abs(zeta[abs(zeta) < zcut]) / 3)
points(log(freq[zeta >= zcut]), zeta[zeta >= zcut], pch=21, bg=cols[1], col=cols[1], cex=zeta[zeta >= zcut] / 3)
points(log(freq[zeta <= -zcut]), zeta[zeta <= -zcut], pch=21, bg=cols[2], col=cols[2], cex=abs(zeta[zeta <= -zcut]) / 3)
text(x = log(freq[tolab1]), y = zeta[tolab1], labels = words[tolab1], cex=zeta[tolab1] / 4, col=cols[1], pos=4)
text(x = log(freq[tolab2]), y = zeta[tolab2], labels = words[tolab2], cex=zeta[tolab2] / 4, col=cols[2], pos=4)
# Group labels on right
text(x = xlims[2], y = ylims[2], labels = groups[1], col = cols[1], cex = 3, pos = 2)
text(x = xlims[2], y = ylims[1], labels = groups[2], col = cols[2], cex = 3, pos = 2)
# Group word lists
text(x = xlims[2], y = seq(0.5, ylims[2] - 1.5, length.out = nwords), labels = words[wlist1], cex = zeta[wlist1] / 4, col = cols[1], pos = 2)
text(x = xlims[2], y = seq(ylims[1] + 1.5, -0.5, length.out = nwords), labels = words[wlist2], cex = abs(zeta[wlist2]) / 4, col = cols[2], pos = 2)
}
# Regex expressions:
PRPplus.re <- "[a-z]+_PRP[$]? [a-z]+_[A-Z]+"
##############################
### 1) LOAD & PREP DATA
##############################
## 1.0) Read in text:
df <- read.csv("D:/cong_text/final_pos/topic_lemtag_merged_114.csv")
## 1.1) Remove newlines:
df$lemma_text <- gsub(pattern = "[\n]", replacement = '', df$lemma_text)
## 1.2) Count pronouns and following token:
df$prpplus <- str_extract_all(string = df$lemma_text, pattern = PRPplus.re)
## 1.3) Count all tokens:
df$words <- NA
for (i in 1:nrow(df)){
df$words[i] <- count_tokens(df$lemma_text[i])
}
##############################
### 2) SUBSET COUNTS
##############################
## 2.0) Republican pronouns plus:
prpR <- make_counts(x = df, count_cols = c('prpplus'),
party = 'R', topic = 0, totalcol = 'words',
outcolnames = c('word', 'counts1', 'priors1'))
## 2.1) Democratic pronouns plus:
prpD <- make_counts(x = df, count_cols = c('prpplus'),
party = 'D', topic = 0, totalcol = 'words',
outcolnames = c('word', 'counts2', 'priors2'))
## 2.2) Merge partisan counts:
prpAll <- merge(x = do.call(rbind, prpR$counts),
y = do.call(rbind, prpD$counts),
by="word", all = T)
## 2.3) Fill NAs to avoid numerical errors:
prpAll[is.na(prpAll[,2]),2] <- 0
prpAll[is.na(prpAll[,3]),3] <- 0.01
prpAll[is.na(prpAll[,4]),4] <- 0
prpAll[is.na(prpAll[,5]),5] <- 0.01
##############################
### 3) FIT MODEL
##############################
## 3.0) Fightin' Words model:
fw_prpplus <- fightin(n1 = prpR$nwords, n2 = prpD$nwords,
counts1 = prpAll$counts1, counts2 = prpAll$counts2,
priors1 = prpAll$priors1, priors2 = prpAll$priors2)
## 3.1) Index words:
fw_prpplus$word <- prpAll$word
## 3.2) Print most partisan words:
cat("\n\n\tDEMS:\n")
head(fw_prpplus[order(fw_prpplus$zeta),], 20)
cat("\n\tREPS:\n")
tail(fw_prpplus[order(fw_prpplus$zeta),], 20)
fightin_plot(words = fw_prpplus$word, zeta = fw_prpplus$zeta/4.42, freq = fw_prpplus$freq, nwords = 15, zcut = 1)
# Edited "Fightin' Words" plot:
fightin_plot <- function(words, zeta, freq, groups=c("GOP","DEM"), cols=c("red2","steelblue"), nwords=15, zcut=3.29){
# plot limits
xlims <- c(-1, max(log(freq)) + 3)
ylims <- round(max(abs(zeta)) + 5, -1)
ylims <- c(-ylims, ylims)
# xaxis labels
xat <- c(-1, log(1), log(100), log(1000), log(10000), log(100000))
xtics <- c("", 1, 100, 1000, 10000, 100000)
xlab <- "Word Frequency in Topic"
# ylab labels
yrng <- ylims[2] - ylims[1]
if (yrng > 50){
yat <- seq(ylims[1], ylims[2], by=10)
} else{
yat <- seq(ylims[1], ylims[2], by = 5)
}
ylab <- expression(zeta[kw]^(R-D)/4.42)
# points to label
tolab1 <- which(zeta %in% tail(sort(zeta), nwords) & zeta >= zcut)
tolab2 <- which(zeta %in% head(sort(zeta), nwords) & zeta <= -zcut)
# words to appear on right
wlist1 <- which(zeta %in% tail(sort(zeta), nwords))
wlist1 <- wlist1[order(zeta[wlist1])]
wlist2 <- which(zeta %in% head(sort(zeta), nwords))
wlist2 <- wlist2[order(zeta[wlist2])]
par(mar = c(5,7,2,2))
plot(0,0, type="n", xlim = xlims, ylim = ylims, xlab = xlab, ylab = ylab, cex.lab = 2, axes = F)
axis(side = 1, at = xat, labels = xtics, cex.axis = 1.5)
axis(side = 2, at = yat, cex.axis = 1.5)
points(log(freq[abs(zeta) < zcut]), zeta[abs(zeta) < zcut], pch=21, bg="grey70", col="grey70", cex=abs(zeta[abs(zeta) < zcut]) / 3)
points(log(freq[zeta >= zcut]), zeta[zeta >= zcut], pch=21, bg=cols[1], col=cols[1], cex=zeta[zeta >= zcut] / 3)
points(log(freq[zeta <= -zcut]), zeta[zeta <= -zcut], pch=21, bg=cols[2], col=cols[2], cex=abs(zeta[zeta <= -zcut]) / 3)
text(x = log(freq[tolab1]), y = zeta[tolab1], labels = words[tolab1], cex=zeta[tolab1] / 2, col=cols[1], pos=4)
text(x = log(freq[tolab2]), y = zeta[tolab2], labels = words[tolab2], cex=zeta[tolab2] / 2, col=cols[2], pos=4)
# Group labels on right
text(x = xlims[2], y = ylims[2], labels = groups[1], col = cols[1], cex = 3, pos = 2)
text(x = xlims[2], y = ylims[1], labels = groups[2], col = cols[2], cex = 3, pos = 2)
# Group word lists
text(x = xlims[2], y = seq(0.5, ylims[2] - 1.5, length.out = nwords), labels = words[wlist1], cex = zeta[wlist1] / 4, col = cols[1], pos = 2)
text(x = xlims[2], y = seq(ylims[1] + 1.5, -0.5, length.out = nwords), labels = words[wlist2], cex = abs(zeta[wlist2]) / 4, col = cols[2], pos = 2)
}
fightin_plot(words = fw_prpplus$word, zeta = fw_prpplus$zeta/4.42, freq = fw_prpplus$freq, nwords = 15, zcut = 1)
# Edited "Fightin' Words" plot:
fightin_plot <- function(words, zeta, freq, groups=c("GOP","DEM"), cols=c("red2","steelblue"), nwords=15, zcut=3.29){
# plot limits
xlims <- c(-1, max(log(freq)) + 3)
ylims <- round(max(abs(zeta)) + 5, -1)
ylims <- c(-ylims, ylims)
# xaxis labels
xat <- c(-1, log(1), log(100), log(1000), log(10000), log(100000))
xtics <- c("", 1, 100, 1000, 10000, 100000)
xlab <- "Word Frequency in Topic"
# ylab labels
yrng <- ylims[2] - ylims[1]
if (yrng > 50){
yat <- seq(ylims[1], ylims[2], by=10)
} else{
yat <- seq(ylims[1], ylims[2], by = 5)
}
ylab <- expression(zeta[kw]^(R-D)/4.42)
# points to label
tolab1 <- which(zeta %in% tail(sort(zeta), nwords) & zeta >= zcut)
tolab2 <- which(zeta %in% head(sort(zeta), nwords) & zeta <= -zcut)
# words to appear on right
wlist1 <- which(zeta %in% tail(sort(zeta), nwords))
wlist1 <- wlist1[order(zeta[wlist1])]
wlist2 <- which(zeta %in% head(sort(zeta), nwords))
wlist2 <- wlist2[order(zeta[wlist2])]
par(mar = c(5,7,2,2))
plot(0,0, type="n", xlim = xlims, ylim = ylims, xlab = xlab, ylab = ylab, cex.lab = 2, axes = F)
axis(side = 1, at = xat, labels = xtics, cex.axis = 1.5)
axis(side = 2, at = yat, cex.axis = 1.5)
points(log(freq[abs(zeta) < zcut]), zeta[abs(zeta) < zcut], pch=21, bg="grey70", col="grey70", cex=abs(zeta[abs(zeta) < zcut]) / 3)
points(log(freq[zeta >= zcut]), zeta[zeta >= zcut], pch=21, bg=cols[1], col=cols[1], cex=zeta[zeta >= zcut] / 3)
points(log(freq[zeta <= -zcut]), zeta[zeta <= -zcut], pch=21, bg=cols[2], col=cols[2], cex=abs(zeta[zeta <= -zcut]) / 3)
text(x = log(freq[tolab1]), y = zeta[tolab1], labels = words[tolab1], cex=zeta[tolab1] / 3, col=cols[1], pos=4)
text(x = log(freq[tolab2]), y = zeta[tolab2], labels = words[tolab2], cex=zeta[tolab2] / 3, col=cols[2], pos=4)
# Group labels on right
text(x = xlims[2], y = ylims[2], labels = groups[1], col = cols[1], cex = 3, pos = 2)
text(x = xlims[2], y = ylims[1], labels = groups[2], col = cols[2], cex = 3, pos = 2)
# Group word lists
text(x = xlims[2], y = seq(0.5, ylims[2] - 1.5, length.out = nwords), labels = words[wlist1], cex = zeta[wlist1] / 3, col = cols[1], pos = 2)
text(x = xlims[2], y = seq(ylims[1] + 1.5, -0.5, length.out = nwords), labels = words[wlist2], cex = abs(zeta[wlist2]) / 3, col = cols[2], pos = 2)
}
fightin_plot(words = fw_prpplus$word, zeta = fw_prpplus$zeta/4.42, freq = fw_prpplus$freq, nwords = 15, zcut = 1)
# Edited "Fightin' Words" plot:
fightin_plot <- function(words, zeta, freq, groups=c("GOP","DEM"), cols=c("red2","steelblue"), nwords=15, zcut=3.29){
# plot limits
xlims <- c(-1, max(log(freq)) + 3)
ylims <- round(max(abs(zeta)) + 5, -1)
ylims <- c(-ylims, ylims)
# xaxis labels
xat <- c(-1, log(1), log(100), log(1000), log(10000), log(100000))
xtics <- c("", 1, 100, 1000, 10000, 100000)
xlab <- "Word Frequency in Topic"
# ylab labels
yrng <- ylims[2] - ylims[1]
if (yrng > 50){
yat <- seq(ylims[1], ylims[2], by=10)
} else{
yat <- seq(ylims[1], ylims[2], by = 5)
}
ylab <- expression(zeta[kw]^(R-D)/4.42)
# points to label
tolab1 <- which(zeta %in% tail(sort(zeta), nwords) & zeta >= zcut)
tolab2 <- which(zeta %in% head(sort(zeta), nwords) & zeta <= -zcut)
# words to appear on right
wlist1 <- which(zeta %in% tail(sort(zeta), nwords))
wlist1 <- wlist1[order(zeta[wlist1])]
wlist2 <- which(zeta %in% head(sort(zeta), nwords))
wlist2 <- wlist2[order(zeta[wlist2])]
par(mar = c(5,7,2,2))
plot(0,0, type="n", xlim = xlims, ylim = ylims, xlab = xlab, ylab = ylab, cex.lab = 2, axes = F)
axis(side = 1, at = xat, labels = xtics, cex.axis = 1.5)
axis(side = 2, at = yat, cex.axis = 1.5)
points(log(freq[abs(zeta) < zcut]), zeta[abs(zeta) < zcut], pch=21, bg="grey70", col="grey70", cex=abs(zeta[abs(zeta) < zcut]) / 3)
points(log(freq[zeta >= zcut]), zeta[zeta >= zcut], pch=21, bg=cols[1], col=cols[1], cex=zeta[zeta >= zcut] / 3)
points(log(freq[zeta <= -zcut]), zeta[zeta <= -zcut], pch=21, bg=cols[2], col=cols[2], cex=abs(zeta[zeta <= -zcut]) / 3)
text(x = log(freq[tolab1]), y = zeta[tolab1], labels = words[tolab1], cex=zeta[tolab1] / 3, col=cols[1], pos=4)
text(x = log(freq[tolab2]), y = zeta[tolab2], labels = words[tolab2], cex=zeta[tolab2] / 3, col=cols[2], pos=4)
# Group labels on right
text(x = xlims[2], y = ylims[2], labels = groups[1], col = cols[1], cex = 3, pos = 2)
text(x = xlims[2], y = ylims[1], labels = groups[2], col = cols[2], cex = 3, pos = 2)
# Group word lists
text(x = xlims[2], y = seq(0.5, ylims[2] - 1.5, length.out = nwords), labels = words[wlist1], cex = zeta[wlist1] / 3.5, col = cols[1], pos = 2)
text(x = xlims[2], y = seq(ylims[1] + 1.5, -0.5, length.out = nwords), labels = words[wlist2], cex = abs(zeta[wlist2]) / 3.5, col = cols[2], pos = 2)
}
fightin_plot(words = fw_prpplus$word, zeta = fw_prpplus$zeta/4.42, freq = fw_prpplus$freq, nwords = 15, zcut = 1)
# Edited "Fightin' Words" plot:
fightin_plot <- function(words, zeta, freq, groups=c("GOP","DEM"), cols=c("red2","steelblue"), nwords=15, zcut=3.29){
# plot limits
xlims <- c(-1, max(log(freq)) + 5)
ylims <- round(max(abs(zeta)) + 5, -1)
ylims <- c(-ylims, ylims)
# xaxis labels
xat <- c(-1, log(1), log(100), log(1000), log(10000), log(100000))
xtics <- c("", 1, 100, 1000, 10000, 100000)
xlab <- "Word Frequency in Topic"
# ylab labels
yrng <- ylims[2] - ylims[1]
if (yrng > 50){
yat <- seq(ylims[1], ylims[2], by=10)
} else{
yat <- seq(ylims[1], ylims[2], by = 5)
}
ylab <- expression(zeta[kw]^(R-D)/4.42)
# points to label
tolab1 <- which(zeta %in% tail(sort(zeta), nwords) & zeta >= zcut)
tolab2 <- which(zeta %in% head(sort(zeta), nwords) & zeta <= -zcut)
# words to appear on right
wlist1 <- which(zeta %in% tail(sort(zeta), nwords))
wlist1 <- wlist1[order(zeta[wlist1])]
wlist2 <- which(zeta %in% head(sort(zeta), nwords))
wlist2 <- wlist2[order(zeta[wlist2])]
par(mar = c(5,7,2,2))
plot(0,0, type="n", xlim = xlims, ylim = ylims, xlab = xlab, ylab = ylab, cex.lab = 2, axes = F)
axis(side = 1, at = xat, labels = xtics, cex.axis = 1.5)
axis(side = 2, at = yat, cex.axis = 1.5)
points(log(freq[abs(zeta) < zcut]), zeta[abs(zeta) < zcut], pch=21, bg="grey70", col="grey70", cex=abs(zeta[abs(zeta) < zcut]) / 3)
points(log(freq[zeta >= zcut]), zeta[zeta >= zcut], pch=21, bg=cols[1], col=cols[1], cex=zeta[zeta >= zcut] / 3)
points(log(freq[zeta <= -zcut]), zeta[zeta <= -zcut], pch=21, bg=cols[2], col=cols[2], cex=abs(zeta[zeta <= -zcut]) / 3)
text(x = log(freq[tolab1]), y = zeta[tolab1], labels = words[tolab1], cex=zeta[tolab1] / 3, col=cols[1], pos=4)
text(x = log(freq[tolab2]), y = zeta[tolab2], labels = words[tolab2], cex=zeta[tolab2] / 3, col=cols[2], pos=4)
# Group labels on right
text(x = xlims[2], y = ylims[2], labels = groups[1], col = cols[1], cex = 3, pos = 2)
text(x = xlims[2], y = ylims[1], labels = groups[2], col = cols[2], cex = 3, pos = 2)
# Group word lists
text(x = xlims[2], y = seq(0.5, ylims[2] - 1.5, length.out = nwords), labels = words[wlist1], cex = zeta[wlist1] / 3.5, col = cols[1], pos = 2)
text(x = xlims[2], y = seq(ylims[1] + 1.5, -0.5, length.out = nwords), labels = words[wlist2], cex = abs(zeta[wlist2]) / 3.5, col = cols[2], pos = 2)
}
fightin_plot(words = fw_prpplus$word, zeta = fw_prpplus$zeta/4.42, freq = fw_prpplus$freq, nwords = 15, zcut = 1)
# Edited "Fightin' Words" plot:
fightin_plot <- function(words, zeta, freq, groups=c("GOP","DEM"), cols=c("red2","steelblue"), nwords=15, zcut=3.29){
# plot limits
xlims <- c(-1, max(log(freq)) + 4)
ylims <- round(max(abs(zeta)) + 5, -1)
ylims <- c(-ylims, ylims)
# xaxis labels
xat <- c(-1, log(1), log(100), log(1000), log(10000), log(100000))
xtics <- c("", 1, 100, 1000, 10000, 100000)
xlab <- "Word Frequency in Topic"
# ylab labels
yrng <- ylims[2] - ylims[1]
if (yrng > 50){
yat <- seq(ylims[1], ylims[2], by=10)
} else{
yat <- seq(ylims[1], ylims[2], by = 5)
}
ylab <- expression(zeta[kw]^(R-D)/4.42)
# points to label
tolab1 <- which(zeta %in% tail(sort(zeta), nwords) & zeta >= zcut)
tolab2 <- which(zeta %in% head(sort(zeta), nwords) & zeta <= -zcut)
# words to appear on right
wlist1 <- which(zeta %in% tail(sort(zeta), nwords))
wlist1 <- wlist1[order(zeta[wlist1])]
wlist2 <- which(zeta %in% head(sort(zeta), nwords))
wlist2 <- wlist2[order(zeta[wlist2])]
par(mar = c(5,7,2,2))
plot(0,0, type="n", xlim = xlims, ylim = ylims, xlab = xlab, ylab = ylab, cex.lab = 2, axes = F)
axis(side = 1, at = xat, labels = xtics, cex.axis = 1.5)
axis(side = 2, at = yat, cex.axis = 1.5)
points(log(freq[abs(zeta) < zcut]), zeta[abs(zeta) < zcut], pch=21, bg="grey70", col="grey70", cex=abs(zeta[abs(zeta) < zcut]) / 3)
points(log(freq[zeta >= zcut]), zeta[zeta >= zcut], pch=21, bg=cols[1], col=cols[1], cex=zeta[zeta >= zcut] / 3)
points(log(freq[zeta <= -zcut]), zeta[zeta <= -zcut], pch=21, bg=cols[2], col=cols[2], cex=abs(zeta[zeta <= -zcut]) / 3)
text(x = log(freq[tolab1]), y = zeta[tolab1], labels = words[tolab1], cex=zeta[tolab1] / 3, col=cols[1], pos=4)
text(x = log(freq[tolab2]), y = zeta[tolab2], labels = words[tolab2], cex=zeta[tolab2] / 3, col=cols[2], pos=4)
# Group labels on right
text(x = xlims[2], y = ylims[2], labels = groups[1], col = cols[1], cex = 3, pos = 2)
text(x = xlims[2], y = ylims[1], labels = groups[2], col = cols[2], cex = 3, pos = 2)
# Group word lists
text(x = xlims[2], y = seq(0.5, ylims[2] - 1.5, length.out = nwords), labels = words[wlist1], cex = zeta[wlist1] / 3.5, col = cols[1], pos = 2)
text(x = xlims[2], y = seq(ylims[1] + 1.5, -0.5, length.out = nwords), labels = words[wlist2], cex = abs(zeta[wlist2]) / 3.5, col = cols[2], pos = 2)
}
fightin_plot(words = fw_prpplus$word, zeta = fw_prpplus$zeta/4.42, freq = fw_prpplus$freq, nwords = 15, zcut = 1)
PRPplus.re <- "([a-z]+_PRP[$]? [a-z]+_[A-Z]+)|([a-z]+_[A-Z]+ [a-z]+_PRP[$]?)"
df$prpplus <- str_extract_all(string = df$lemma_text, pattern = PRPplus.re)
prpR <- make_counts(x = df, count_cols = c('prpplus'),
party = 'R', topic = 0, totalcol = 'words',
outcolnames = c('word', 'counts1', 'priors1'))
## 2.1) Democratic pronouns plus:
prpD <- make_counts(x = df, count_cols = c('prpplus'),
party = 'D', topic = 0, totalcol = 'words',
outcolnames = c('word', 'counts2', 'priors2'))
## 2.2) Merge partisan counts:
prpAll <- merge(x = do.call(rbind, prpR$counts),
y = do.call(rbind, prpD$counts),
by="word", all = T)
## 2.3) Fill NAs to avoid numerical errors:
prpAll[is.na(prpAll[,2]),2] <- 0
prpAll[is.na(prpAll[,3]),3] <- 0.01
prpAll[is.na(prpAll[,4]),4] <- 0
prpAll[is.na(prpAll[,5]),5] <- 0.01
##############################
### 3) FIT MODEL
##############################
## 3.0) Fightin' Words model:
fw_prpplus <- fightin(n1 = prpR$nwords, n2 = prpD$nwords,
counts1 = prpAll$counts1, counts2 = prpAll$counts2,
priors1 = prpAll$priors1, priors2 = prpAll$priors2)
## 3.1) Index words:
fw_prpplus$word <- prpAll$word
## 3.2) Print most partisan words:
cat("\n\n\tDEMS:\n")
head(fw_prpplus[order(fw_prpplus$zeta),], 20)
cat("\n\tREPS:\n")
tail(fw_prpplus[order(fw_prpplus$zeta),], 20)
fightin_plot(words = fw_prpplus$word, zeta = fw_prpplus$zeta/4.42, freq = fw_prpplus$freq, nwords = 15, zcut = 1)
rm(list = ls())
options(stringsAsFactors = F)
sessionInfo()
df <- read.csv("D:/cong_text/robust/exploratory/pronoun_ngrams_raw.csv")
df <- df[order(df$zeta),]
df[20:30,]
df[30:40,]
